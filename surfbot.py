import os
import asyncio
from datetime import datetime
from telethon import TelegramClient
from telethon.errors import FloodWaitError, AccessTokenExpiredError, RPCError

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render Dashboard ‚Üí Environment) ===
API_ID = os.getenv("API_ID")
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

print("üå¥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
print(f"API_ID: {API_ID}")
print(f"API_HASH: {'‚úÖ –µ—Å—Ç—å' if API_HASH else '‚ùå –Ω–µ—Ç'}")
print(f"BOT_TOKEN: {'‚úÖ –µ—Å—Ç—å' if BOT_TOKEN else '‚ùå –Ω–µ—Ç'}")
print(f"CHAT_ID: {CHAT_ID if CHAT_ID else '‚ùå –Ω–µ—Ç'}")
print("=====================================")

if not all([API_ID, API_HASH, BOT_TOKEN, CHAT_ID]):
    print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    print("–ü—Ä–æ–≤–µ—Ä—å Render ‚Üí Environment ‚Üí API_ID, API_HASH, BOT_TOKEN, CHAT_ID")
    exit(1)

API_ID = int(API_ID)

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async def start_bot():
    client = TelegramClient("surf_session", API_ID, API_HASH)

    try:
        print(f"\nüåä [{datetime.now().strftime('%H:%M:%S')}] –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
        await client.start(bot_token=BOT_TOKEN)

        me = await client.get_me()
        print(f"‚úÖ –ë–æ—Ç @{me.username} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –≤–æ–ª–Ω–∞–º.")

        # –°–æ–æ–±—â–∞–µ–º –≤ Telegram, —á—Ç–æ –±–æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª
        start_msg = f"üöÄ –ë–æ—Ç @{me.username} –∑–∞–ø—É—â–µ–Ω –∏ –æ–Ω–ª–∞–π–Ω üå¥\n‚è∞ {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
        await client.send_message(CHAT_ID, start_msg)
        print("üì© –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")

        # === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
        while True:
            try:
                # –ö–∞–∂–¥—ã–µ 60 –º–∏–Ω—É—Ç —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –∂–∏–≤
                await asyncio.sleep(3600)
                await client.send_message(CHAT_ID, f"üåä –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º! –ë–æ—Ç –æ–Ω–ª–∞–π–Ω ‚úÖ\n{datetime.now().strftime('%H:%M:%S')}")
                print(f"üì® [{datetime.now().strftime('%H:%M:%S')}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

            except FloodWaitError as e:
                print(f"‚ö†Ô∏è FloodWait: –∂–¥—ë–º {e.seconds} —Å–µ–∫—É–Ω–¥.")
                await asyncio.sleep(e.seconds + 5)
            except Exception as e:
                print(f"üí• –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ: {e}")
                await client.send_message(CHAT_ID, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞:\n`{type(e).__name__}: {e}`\n‚è∞ {datetime.now().strftime('%H:%M:%S')}")
                await asyncio.sleep(60)

    except FloodWaitError as e:
        print(f"‚è≥ FloodWait: –ø–∞—É–∑–∞ {e.seconds} —Å–µ–∫—É–Ω–¥.")
        await asyncio.sleep(e.seconds + 5)
        await start_bot()

    except AccessTokenExpiredError:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω. –û–±–Ω–æ–≤–∏ –µ–≥–æ —á–µ—Ä–µ–∑ @BotFather.")
        try:
            await client.send_message(CHAT_ID, "‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏—Å—Ç—ë–∫. –û–±–Ω–æ–≤–∏ –µ–≥–æ –≤ @BotFather.")
        except:
            pass
        await asyncio.sleep(3600)
        await start_bot()

    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        try:
            await client.send_message(CHAT_ID, f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n`{type(e).__name__}: {e}`\n‚è∞ {datetime.now().strftime('%H:%M:%S')}")
        except:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.")
        await asyncio.sleep(120)
        await start_bot()

    finally:
        await client.disconnect()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.")


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ SurfHunter Bot...")
    try:
        asyncio.run(start_bot())
    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä—É—á–Ω—É—é.")
    except Exception as e:
        print(f"‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")