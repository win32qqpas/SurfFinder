import os
import asyncio
from datetime import datetime
from telethon import TelegramClient, events

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ Render Environment ===
API_ID = os.getenv("API_ID")
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π ===
missing_keys = [k for k, v in {
    "API_ID": API_ID, "API_HASH": API_HASH, "BOT_TOKEN": BOT_TOKEN, "CHAT_ID": CHAT_ID
}.items() if not v]

if missing_keys:
    print(f"‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏ {', '.join(missing_keys)}")
else:
    print("‚úÖ –í—Å–µ –∫–ª—é—á–∏ –Ω–∞–π–¥–µ–Ω—ã. –°—Ç–∞—Ä—Ç—É–µ–º...")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ===
client = TelegramClient('surf_session', int(API_ID), API_HASH)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@client.on(events.NewMessage(chats=int(CHAT_ID)))
async def handler(event):
    try:
        messages = await client.get_messages(int(CHAT_ID), limit=50)
        print(f"[{datetime.now().strftime('%H:%M:%S')}] üîπ –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ===
async def hourly_check():
    while True:
        await asyncio.sleep(3600)  # –∫–∞–∂–¥—ã–π —á–∞—Å
        print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")
        try:
            await client.send_message(int(CHAT_ID), f"üèÑ‚Äç‚ôÇÔ∏è SurfHunter –æ–Ω–ª–∞–π–Ω {datetime.now().strftime('%H:%M')}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
async def main():
    await client.start(bot_token=BOT_TOKEN)
    me = await client.get_me()
    print(f"üöÄ –ë–æ—Ç {me.username or me.first_name} –∑–∞–ø—É—â–µ–Ω –≤ {datetime.now().strftime('%d.%m %H:%M')}")

    try:
        await client.send_message(int(CHAT_ID), f"ü§ô SurfHunter –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ª–æ–≤–ª–µ –≤–æ–ª–Ω! üåä {datetime.now().strftime('%H:%M')}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: {e}")

    asyncio.create_task(hourly_check())
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())