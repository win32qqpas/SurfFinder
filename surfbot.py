import os
import asyncio
from datetime import datetime, timezone, timedelta
from telethon import TelegramClient, errors, events

# =============================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
# =============================
API_ID = int(os.environ.get("API_ID"))
API_HASH = os.environ.get("API_HASH")
BOT_TOKEN = os.environ.get("BOT_TOKEN")
OWNER_ID = int(os.environ.get("OWNER_ID"))

# –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç –±–æ—Ç–∞
client = TelegramClient("bot_session", API_ID, API_HASH).start(bot_token=BOT_TOKEN)

# =============================
# –°–ø–∏—Å–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
# =============================
CHANNELS = [
    "balichatik","voprosBali","bali_russia_choogl","cangguchat",
    "bali_ubud_changu","balichat_canggu","balichat_bukit","balichatnash",
    "balichat_bukitwoman","balichatfit","balichatsurfing","balisurfer",
    "ChatCanggu","bukit_bali2","baliaab666","bali_chat","bali_ua"
]

KEYWORDS = [
    "—Å–µ—Ä—Ñ–∏–Ω–≥","—Å–µ—Ä—Ñ","–∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É","—Å–µ—Ä—Ñ—É—Ä–æ–∫",
    "—É—Ä–æ–∫–∏ —Å–µ—Ä—Ñ–∏–Ω–≥–∞","—Ç—Ä–µ–Ω–µ—Ä –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É","—Å–µ—Ä—Ñ—Ç—Ä–µ–Ω–µ—Ä",
    "–∑–∞–Ω—è—Ç–∏–µ –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É","—Å–µ—Ä—Ñ–∫–µ–º–ø","–∏—â—É –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É"
]

CHECK_INTERVAL_HOURS = float(os.environ.get("CHECK_INTERVAL_HOURS", 0.333333))  # 20 –º–∏–Ω—É—Ç

# =============================
# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
# =============================
async def main():
    await client.start()
    print("üöÄ SurfFinder –∑–∞–ø—É—â–µ–Ω!")

    while True:
        for channel in CHANNELS:
            try:
                entity = await client.get_entity(channel)
                messages = await client.get_messages(entity, limit=50)
                for msg in messages:
                    text = msg.message
                    if text and any(keyword.lower() in text.lower() for keyword in KEYWORDS):
                        link = f"https://t.me/{channel}/{msg.id}" if hasattr(msg, "id") else f"https://t.me/{channel}"
                        await client.send_message(OWNER_ID, f"–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{text}\n\n–°—Å—ã–ª–∫–∞: {link}")
            except errors.FloodWaitError as e:
                print(f"‚è≥ FloodWait {e.seconds} —Å–µ–∫. –¥–ª—è {channel}")
                await asyncio.sleep(e.seconds + 5)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ {channel}: {e}")

        print(f"ü§ô –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∞—è —á–µ—Ä–µ–∑ {CHECK_INTERVAL_HOURS*60:.0f} –º–∏–Ω—É—Ç.")
        await asyncio.sleep(CHECK_INTERVAL_HOURS * 3600)

# =============================
# –ó–∞–ø—É—Å–∫
# =============================
if __name__ == "__main__":
    asyncio.run(main())